{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"score-table\"\n};\nconst _hoisted_3 = {\n  class: \"score-column\"\n};\nconst _hoisted_4 = {\n  class: \"score-row\"\n};\nconst _hoisted_5 = {\n  class: \"score-row\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"choices\"\n};\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"Piedra, Papel o ¡Revancha!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"score-row\"\n  }, [_createElementVNode(\"h2\", null, \"Puntaje\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"score-row\"\n  }, [_createElementVNode(\"h3\", null, \"Usuario\")], -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"score-row\"\n  }, [_createElementVNode(\"h3\", null, \"Computadora\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h4\", null, _toDisplayString(_ctx.user_score), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h4\", null, _toDisplayString(_ctx.computer_score), 1 /* TEXT */)])])]), !$setup.gameOver ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Elige una opción:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.play('piedra'))\n  }, \"Piedra\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.play('papel'))\n  }, \"Papel\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.play('tijera'))\n  }, \"Tijera\")])])) : _createCommentVNode(\"v-if\", true), $setup.gameOver ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"h3\", null, \"Tu elección: \" + _toDisplayString($setup.userChoice) + \" | Opción de la computadora: \" + _toDisplayString($setup.computerChoice), 1 /* TEXT */), _createElementVNode(\"div\", {\n    class: _normalizeClass($setup.resultClass)\n  }, [_createElementVNode(\"h3\", null, _toDisplayString($setup.resultMessage), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.restartGame && $setup.restartGame(...args))\n  }, \"Jugar de nuevo\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_ctx","user_score","_hoisted_5","computer_score","$setup","gameOver","_hoisted_6","_hoisted_7","onClick","_cache","$event","play","_createCommentVNode","_hoisted_8","userChoice","computerChoice","_normalizeClass","resultClass","resultMessage","args","restartGame"],"sources":["C:\\Users\\Edgar\\Documents\\GitHub\\spsgame\\spsgame\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Piedra, Papel o ¡Revancha!</h1>\n    <div class=\"score-table\">\n      <div class=\"score-row\">\n          <h2>Puntaje</h2>\n        </div>\n      <div class=\"score-column\">\n        <div class=\"score-row\">\n          <h3>Usuario</h3>\n        </div>\n        <div class=\"score-row\">\n          <h3>Computadora</h3>\n        </div>\n        <div class=\"score-row\">\n          <h4>{{user_score}}</h4>\n        </div>\n        <div class=\"score-row\">\n          <h4>{{computer_score}}</h4>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"!gameOver\">\n      <h3>Elige una opción:</h3>\n      <div class=\"choices\">\n        <button @click=\"play('piedra')\">Piedra</button>\n        <button @click=\"play('papel')\">Papel</button>\n        <button @click=\"play('tijera')\">Tijera</button>\n      </div>\n    </div>\n    \n    <div v-if=\"gameOver\">\n      <h3>Tu elección: {{ userChoice }} | Opción de la computadora: {{ computerChoice }}</h3>\n      <div :class=\"resultClass\">\n        <h3>{{ resultMessage }}</h3>\n      </div>\n      <button @click=\"restartGame\">Jugar de nuevo</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\n\nexport default {\n  setup() {\n    const userChoice = ref('');\n    const computerChoice = ref('');\n    const resultMessage = ref('');\n    const gameOver = ref(false);\n    const result_Gain = ref(false); \n    const result_Draw = ref(false); \n    const user_score = ref(0);\n    const computer_score = ref(0);\n\n    // Opciones disponibles\n    const choices = ['piedra', 'papel', 'tijera'];\n\n    // Lógica para jugar\n    const play = (choice) => {\n      userChoice.value = choice;\n      computerChoice.value = choices[Math.floor(Math.random() * choices.length)];\n      determineWinner();\n      gameOver.value = true;\n    };\n\n    // Función para determinar el ganador\n    const determineWinner = () => {\n      if (userChoice.value === computerChoice.value) {\n        resultMessage.value = '¡Empate!';\n        result_Draw.value = true;\n        result_Gain.value = false;\n      } else if (\n        (userChoice.value === 'piedra' && computerChoice.value === 'tijera') ||\n        (userChoice.value === 'papel' && computerChoice.value === 'piedra') ||\n        (userChoice.value === 'tijera' && computerChoice.value === 'papel')\n      ) {\n        resultMessage.value = '¡Ganaste!';\n        result_Gain.value = true;\n        result_Draw.value = false;\n        user_score.value++;\n      } else {\n        resultMessage.value = '¡Perdiste!';\n        result_Gain.value = false;\n        result_Draw.value = false;\n      }\n    };\n\n    // Función para reiniciar el juego\n    const restartGame = () => {\n      userChoice.value = '';\n      computerChoice.value = '';\n      resultMessage.value = '';\n      gameOver.value = false;\n    };\n\n    // Determina la clase que se aplicará en función del resultado\n    const resultClass = computed(() => {\n      if (result_Gain.value) {\n        return 'resultGain';\n      } else if (result_Draw.value) {\n        return 'resultDraw';\n      } else {\n        return 'resultLost';\n      }\n    });\n\n    return {\n      result_Gain,\n      result_Draw,\n      userChoice,\n      computerChoice,\n      resultMessage,\n      gameOver,\n      play,\n      restartGame,\n      resultClass\n    };\n  }\n};\n</script>\n\n<style>\nbody {\n  background-color: gray;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  text-align: center;\n  margin: 60px;\n  padding: 50px;\n  background-color: white;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0.1, 0.2, 0.3);\n  border-radius: 40px;\n}\n\n.choices button {\n  padding: 20px 30px;\n  font-size: 18px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #42b983;\n  border: none;\n  color: white;\n  border-radius: 15px;\n}\n\n.choices button:hover {\n  background-color: #369b73;\n}\n\nbutton {\n  padding: 10px 20px;\n  font-size: 18px;\n  cursor: pointer;\n  background-color: #42b983;\n  border: none;\n  color: white;\n  border-radius: 5px;\n}\n\nbutton:hover {\n  background-color: #369b73;\n}\n\nh3 {\n  font-size: 20px;\n  margin-top: 20px;\n}\n\n.resultGain {\n  background-color: green;\n  color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.resultLost {\n  background-color: red;\n  color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.resultDraw {\n  background-color: yellow;\n  color: black;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.score-column{\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.score-row{\n  display: grid;\n  grid-template-rows: 1fr;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAENC,KAAK,EAAC;AAAa;;EAIjBA,KAAK,EAAC;AAAc;;EAOlBA,KAAK,EAAC;AAAW;;EAGjBA,KAAK,EAAC;AAAW;;EAjB9BC,GAAA;AAAA;;EAwBWD,KAAK,EAAC;AAAS;;EAxB1BC,GAAA;AAAA;;uBACEC,mBAAA,CAqCM,OArCNC,UAqCM,G,0BApCJC,mBAAA,CAAmC,YAA/B,4BAA0B,sBAC9BA,mBAAA,CAkBM,OAlBNC,UAkBM,G,0BAjBJD,mBAAA,CAEQ;IAFHJ,KAAK,EAAC;EAAW,IAClBI,mBAAA,CAAgB,YAAZ,SAAO,E,sBAEfA,mBAAA,CAaM,OAbNE,UAaM,G,0BAZJF,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAW,IACpBI,mBAAA,CAAgB,YAAZ,SAAO,E,gDAEbA,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAW,IACpBI,mBAAA,CAAoB,YAAhB,aAAW,E,sBAEjBA,mBAAA,CAEM,OAFNG,UAEM,GADJH,mBAAA,CAAuB,YAAAI,gBAAA,CAAjBC,IAAA,CAAAC,UAAU,iB,GAElBN,mBAAA,CAEM,OAFNO,UAEM,GADJP,mBAAA,CAA2B,YAAAI,gBAAA,CAArBC,IAAA,CAAAG,cAAc,iB,QAIdC,MAAA,CAAAC,QAAQ,I,cAApBZ,mBAAA,CAOM,OA7BVa,UAAA,G,0BAuBMX,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAIM,OAJNY,UAIM,GAHJZ,mBAAA,CAA+C;IAAtCa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,MAAA,CAAAO,IAAI;KAAY,QAAM,GACtChB,mBAAA,CAA6C;IAApCa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,MAAA,CAAAO,IAAI;KAAW,OAAK,GACpChB,mBAAA,CAA+C;IAAtCa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,MAAA,CAAAO,IAAI;KAAY,QAAM,E,OA3B9CC,mBAAA,gBA+BeR,MAAA,CAAAC,QAAQ,I,cAAnBZ,mBAAA,CAMM,OArCVoB,UAAA,GAgCMlB,mBAAA,CAAuF,YAAnF,eAAa,GAAAI,gBAAA,CAAGK,MAAA,CAAAU,UAAU,IAAG,+BAA6B,GAAAf,gBAAA,CAAGK,MAAA,CAAAW,cAAc,kBAC/EpB,mBAAA,CAEM;IAFAJ,KAAK,EAjCjByB,eAAA,CAiCmBZ,MAAA,CAAAa,WAAW;MACtBtB,mBAAA,CAA4B,YAAAI,gBAAA,CAArBK,MAAA,CAAAc,aAAa,iB,kBAEtBvB,mBAAA,CAAoD;IAA3Ca,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEf,MAAA,CAAAgB,WAAA,IAAAhB,MAAA,CAAAgB,WAAA,IAAAD,IAAA,CAAW;KAAE,gBAAc,E,KApCjDP,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}