{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  setup() {\n    const userChoice = ref('');\n    const computerChoice = ref('');\n    const resultMessage = ref('');\n    const gameOver = ref(false);\n    const result_Gain = ref(false);\n    const result_Draw = ref(false);\n    const user_score = ref(0);\n    const computer_score = ref(0);\n    const game_over = ref(false);\n    const counter = ref(0);\n    // Opciones disponibles\n    const choices = ['piedra', 'papel', 'tijera'];\n\n    // Lógica para jugar\n    const play = choice => {\n      userChoice.value = choice;\n      computerChoice.value = choices[Math.floor(Math.random() * choices.length)];\n      determineWinner();\n      gameOver.value = true;\n    };\n\n    // Función para determinar el ganador\n    const determineWinner = () => {\n      if (userChoice.value === computerChoice.value) {\n        resultMessage.value = '¡Empate!';\n        result_Draw.value = true;\n        result_Gain.value = false;\n      } else if (userChoice.value === 'piedra' && computerChoice.value === 'tijera' || userChoice.value === 'papel' && computerChoice.value === 'piedra' || userChoice.value === 'tijera' && computerChoice.value === 'papel') {\n        resultMessage.value = '¡Ganaste!';\n        result_Gain.value = true;\n        result_Draw.value = false;\n        user_score.value++;\n      } else {\n        resultMessage.value = '¡Perdiste!';\n        result_Gain.value = false;\n        result_Draw.value = false;\n        computer_score.value++;\n      }\n      counter.value++;\n      if ((user_score.value === 3 || computer_score.value === 3) && counter.value >= 2) {\n        game_over.value = true;\n        counter.value = 0;\n        //gameOver.value = true;\n        user_score.value = 0;\n        computer_score.value = 0;\n      } else {\n        alert(game_over.value);\n        game_over.value = false;\n      }\n    };\n\n    // Función para reiniciar el juego\n    const restartGame = () => {\n      userChoice.value = '';\n      computerChoice.value = '';\n      resultMessage.value = '';\n      gameOver.value = true;\n    };\n\n    // Función para intentar de nuevo\n    const tryAgain = () => {\n      userChoice.value = '';\n      computerChoice.value = '';\n      resultMessage.value = '';\n      gameOver.value = false;\n    };\n\n    // Determina la clase que se aplicará en función del resultado\n    const resultClass = computed(() => {\n      if (result_Gain.value) {\n        return 'resultGain';\n      } else if (result_Draw.value) {\n        return 'resultDraw';\n      } else {\n        return 'resultLost';\n      }\n    });\n    return {\n      user_score,\n      computer_score,\n      counter,\n      result_Gain,\n      result_Draw,\n      userChoice,\n      computerChoice,\n      resultMessage,\n      gameOver,\n      play,\n      restartGame,\n      tryAgain,\n      resultClass\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","setup","userChoice","computerChoice","resultMessage","gameOver","result_Gain","result_Draw","user_score","computer_score","game_over","counter","choices","play","choice","value","Math","floor","random","length","determineWinner","alert","restartGame","tryAgain","resultClass"],"sources":["C:\\Users\\Edgar\\Documents\\GitHub\\spsgame\\spsgame\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Piedra, Papel o ¡Revancha!</h1>\n    <div class=\"score-table\">\n      <div class=\"score-row\">\n          <h2>Puntaje</h2>\n        </div>\n      <div class=\"score-column\">\n        <div class=\"score-row\">\n          <h3>Usuario</h3>\n        </div>\n        <div class=\"score-row\">\n          <h3>Computadora</h3>\n        </div>\n        <div class=\"score-row\">\n          <h4>{{user_score}}</h4>\n        </div>\n        <div class=\"score-row\">\n          <h4>{{computer_score}}</h4>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"!gameOver\">\n      <h3>Elige una opción:</h3>\n      <div class=\"choices\">\n        <button @click=\"play('piedra')\">Piedra</button>\n        <button @click=\"play('papel')\">Papel</button>\n        <button @click=\"play('tijera')\">Tijera</button>\n      </div>\n    </div>\n    \n    <div v-if=\"gameOver\">\n      <h3>Tu elección: {{ userChoice }} | Opción de la computadora: {{ computerChoice }}</h3>\n      <div v-if=\"result_Gain\">\n        <div class=\"resultClass\">\n          <h3>{{ resultMessage }}</h3>\n        </div>\n      </div>\n      <div v-else-if=\"result_Draw\">\n        \n      </div>\n      <div class=\"resultClass\" v-if=\"result_Gain\">\n        <h3>{{ resultMessage }}</h3>\n      </div>\n      \n      <div v-if=\"game_over\">\n        <button @click=\"restartGame\">Jugar de nuevo</button>\n      </div>\n      <div v-else>\n        <button @click=\"tryAgain\">Intentar de nuevo</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\n\nexport default {\n  setup() {\n    const userChoice = ref('');\n    const computerChoice = ref('');\n    const resultMessage = ref('');\n    const gameOver = ref(false);\n    const result_Gain = ref(false); \n    const result_Draw = ref(false); \n    const user_score = ref(0);\n    const computer_score = ref(0);\n    const game_over = ref(false);\n    const counter = ref(0);\n    // Opciones disponibles\n    const choices = ['piedra', 'papel', 'tijera'];\n\n    // Lógica para jugar\n    const play = (choice) => {\n      userChoice.value = choice;\n      computerChoice.value = choices[Math.floor(Math.random() * choices.length)];\n      determineWinner();\n      gameOver.value = true;\n    };\n\n    // Función para determinar el ganador\n    const determineWinner = () => {\n      if (userChoice.value === computerChoice.value) {\n        resultMessage.value = '¡Empate!';\n        result_Draw.value = true;\n        result_Gain.value = false;\n      } else if (\n        (userChoice.value === 'piedra' && computerChoice.value === 'tijera') ||\n        (userChoice.value === 'papel' && computerChoice.value === 'piedra') ||\n        (userChoice.value === 'tijera' && computerChoice.value === 'papel')\n      ) {\n        resultMessage.value = '¡Ganaste!';\n        result_Gain.value = true;\n        result_Draw.value = false;\n        user_score.value++;\n      } else {\n        resultMessage.value = '¡Perdiste!';\n        result_Gain.value = false;\n        result_Draw.value = false;\n        computer_score.value++;\n      }\n      counter.value++;\n      if((user_score.value === 3 || computer_score.value === 3) && counter.value >= 2){\n        game_over.value = true;\n        counter.value = 0;\n        //gameOver.value = true;\n        user_score.value = 0;\n        computer_score.value = 0;\n      }else{\n        alert(game_over.value);\n        game_over.value = false;\n      }\n    };\n\n    // Función para reiniciar el juego\n    const restartGame = () => {\n      userChoice.value = '';\n      computerChoice.value = '';\n      resultMessage.value = '';\n      gameOver.value = true;\n    };\n    \n    // Función para intentar de nuevo\n    const tryAgain = () => {\n      userChoice.value = '';\n      computerChoice.value = '';\n      resultMessage.value = '';\n      gameOver.value = false;\n    };\n\n    // Determina la clase que se aplicará en función del resultado\n    const resultClass = computed(() => {\n      if (result_Gain.value) {\n        return 'resultGain';\n      } else if (result_Draw.value) {\n        return 'resultDraw';\n      } else {\n        return 'resultLost';\n      }\n    });\n\n    return {\n      user_score,\n      computer_score,\n      counter,\n      result_Gain,\n      result_Draw,\n      userChoice,\n      computerChoice,\n      resultMessage,\n      gameOver,\n      play,\n      restartGame,\n      tryAgain,\n      resultClass\n    };\n  }\n};\n</script>\n\n<style>\nbody {\n  background-color: gray;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  text-align: center;\n  margin: 60px;\n  padding: 50px;\n  background-color: white;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0.1, 0.2, 0.3);\n  border-radius: 40px;\n}\n\n.choices button {\n  padding: 20px 30px;\n  font-size: 18px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #42b983;\n  border: none;\n  color: white;\n  border-radius: 15px;\n}\n\n.choices button:hover {\n  background-color: #369b73;\n}\n\nbutton {\n  padding: 10px 20px;\n  font-size: 18px;\n  cursor: pointer;\n  background-color: #42b983;\n  border: none;\n  color: white;\n  border-radius: 5px;\n}\n\nbutton:hover {\n  background-color: #369b73;\n}\n\nh3 {\n  font-size: 20px;\n  margin-top: 20px;\n}\n\n.resultGain {\n  background-color: green;\n  color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.resultLost {\n  background-color: red;\n  color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.resultDraw {\n  background-color: yellow;\n  color: black;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.score-column{\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.score-row{\n  display: grid;\n  grid-template-rows: 1fr;\n}\n</style>\n"],"mappings":"AAwDA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AAEnC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIH,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMI,cAAa,GAAIJ,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMK,aAAY,GAAIL,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMM,QAAO,GAAIN,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMO,WAAU,GAAIP,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMQ,WAAU,GAAIR,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMS,UAAS,GAAIT,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMU,cAAa,GAAIV,GAAG,CAAC,CAAC,CAAC;IAC7B,MAAMW,SAAQ,GAAIX,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMY,OAAM,GAAIZ,GAAG,CAAC,CAAC,CAAC;IACtB;IACA,MAAMa,OAAM,GAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;;IAE7C;IACA,MAAMC,IAAG,GAAKC,MAAM,IAAK;MACvBZ,UAAU,CAACa,KAAI,GAAID,MAAM;MACzBX,cAAc,CAACY,KAAI,GAAIH,OAAO,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAIN,OAAO,CAACO,MAAM,CAAC,CAAC;MAC1EC,eAAe,CAAC,CAAC;MACjBf,QAAQ,CAACU,KAAI,GAAI,IAAI;IACvB,CAAC;;IAED;IACA,MAAMK,eAAc,GAAIA,CAAA,KAAM;MAC5B,IAAIlB,UAAU,CAACa,KAAI,KAAMZ,cAAc,CAACY,KAAK,EAAE;QAC7CX,aAAa,CAACW,KAAI,GAAI,UAAU;QAChCR,WAAW,CAACQ,KAAI,GAAI,IAAI;QACxBT,WAAW,CAACS,KAAI,GAAI,KAAK;MAC3B,OAAO,IACJb,UAAU,CAACa,KAAI,KAAM,QAAO,IAAKZ,cAAc,CAACY,KAAI,KAAM,QAAQ,IAClEb,UAAU,CAACa,KAAI,KAAM,OAAM,IAAKZ,cAAc,CAACY,KAAI,KAAM,QAAQ,IACjEb,UAAU,CAACa,KAAI,KAAM,QAAO,IAAKZ,cAAc,CAACY,KAAI,KAAM,OAAO,EAClE;QACAX,aAAa,CAACW,KAAI,GAAI,WAAW;QACjCT,WAAW,CAACS,KAAI,GAAI,IAAI;QACxBR,WAAW,CAACQ,KAAI,GAAI,KAAK;QACzBP,UAAU,CAACO,KAAK,EAAE;MACpB,OAAO;QACLX,aAAa,CAACW,KAAI,GAAI,YAAY;QAClCT,WAAW,CAACS,KAAI,GAAI,KAAK;QACzBR,WAAW,CAACQ,KAAI,GAAI,KAAK;QACzBN,cAAc,CAACM,KAAK,EAAE;MACxB;MACAJ,OAAO,CAACI,KAAK,EAAE;MACf,IAAG,CAACP,UAAU,CAACO,KAAI,KAAM,KAAKN,cAAc,CAACM,KAAI,KAAM,CAAC,KAAKJ,OAAO,CAACI,KAAI,IAAK,CAAC,EAAC;QAC9EL,SAAS,CAACK,KAAI,GAAI,IAAI;QACtBJ,OAAO,CAACI,KAAI,GAAI,CAAC;QACjB;QACAP,UAAU,CAACO,KAAI,GAAI,CAAC;QACpBN,cAAc,CAACM,KAAI,GAAI,CAAC;MAC1B,CAAC,MAAI;QACHM,KAAK,CAACX,SAAS,CAACK,KAAK,CAAC;QACtBL,SAAS,CAACK,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;;IAED;IACA,MAAMO,WAAU,GAAIA,CAAA,KAAM;MACxBpB,UAAU,CAACa,KAAI,GAAI,EAAE;MACrBZ,cAAc,CAACY,KAAI,GAAI,EAAE;MACzBX,aAAa,CAACW,KAAI,GAAI,EAAE;MACxBV,QAAQ,CAACU,KAAI,GAAI,IAAI;IACvB,CAAC;;IAED;IACA,MAAMQ,QAAO,GAAIA,CAAA,KAAM;MACrBrB,UAAU,CAACa,KAAI,GAAI,EAAE;MACrBZ,cAAc,CAACY,KAAI,GAAI,EAAE;MACzBX,aAAa,CAACW,KAAI,GAAI,EAAE;MACxBV,QAAQ,CAACU,KAAI,GAAI,KAAK;IACxB,CAAC;;IAED;IACA,MAAMS,WAAU,GAAIxB,QAAQ,CAAC,MAAM;MACjC,IAAIM,WAAW,CAACS,KAAK,EAAE;QACrB,OAAO,YAAY;MACrB,OAAO,IAAIR,WAAW,CAACQ,KAAK,EAAE;QAC5B,OAAO,YAAY;MACrB,OAAO;QACL,OAAO,YAAY;MACrB;IACF,CAAC,CAAC;IAEF,OAAO;MACLP,UAAU;MACVC,cAAc;MACdE,OAAO;MACPL,WAAW;MACXC,WAAW;MACXL,UAAU;MACVC,cAAc;MACdC,aAAa;MACbC,QAAQ;MACRQ,IAAI;MACJS,WAAW;MACXC,QAAQ;MACRC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}